- set_fact:
    runner_config: "{{ default_runner_config|combine(item) }}"

- name: check runner state
  become: True
  shell: "grep '  name = .*{{ runner_config.RUNNER_NAME }}' /srv/gitlab-runner/config/config.toml"
  register: runner_exists
  failed_when: false
  changed_when: false

- name: unregister runner gitlab-runner-{{ runner_config.RUNNER_NAME }}
  docker_container:
    name: "ops-runner-{{ runner_config.RUNNER_NAME }}"
    image: "gitlab/gitlab-runner:{{ gitlab_runner_tag }}"
    state: started
    restart_policy: no
    volumes:
      - /srv/gitlab-runner/config:/etc/gitlab-runner:Z
    env: "{{ runner_config }}"
    command: unregister -n {{ runner_config.RUNNER_NAME }}
  become: True
  when:
    - runner_config.state == "absent"
    - runner_exists.stdout_lines|length > 0

- name: remove ops container for gitlab-runner-{{ runner_config.RUNNER_NAME }}
  docker_container:
    name: "ops-runner-{{ runner_config.RUNNER_NAME }}"
    state: absent
  become: True

- name: register runner gitlab-runner-{{ runner_config.RUNNER_NAME }}
  docker_container:
    name: "ops-runner-{{ runner_config.RUNNER_NAME }}"
    image: "gitlab/gitlab-runner:{{ gitlab_runner_tag }}"
    state: started
    restart_policy: no
    volumes:
      - /srv/gitlab-runner/config:/etc/gitlab-runner:Z
    env: "{{ runner_config }}"
    command: register
  become: True
  when:
    - runner_config.state == "started"
    - runner_config.REGISTRATION_TOKEN is defined
    - runner_config.REGISTRATION_TOKEN != ""
    - runner_exists.stdout_lines|length == 0

- name: remove ops container for gitlab-runner-{{ runner_config.RUNNER_NAME }}
  docker_container:
    name: "ops-runner-{{ runner_config.RUNNER_NAME }}"
    state: absent
  become: True
